{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_guards/auth.guard.ts","./src/app/_guards/preventClose.guard.ts","./src/app/_resolvers/lists.resolver.ts","./src/app/_resolvers/members-details.resolver.ts","./src/app/_resolvers/members-edit.resolver.ts","./src/app/_resolvers/members-list.resolver.ts","./src/app/_resolvers/messages.resolver.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/home/register/register.component.html","./src/app/home/register/register.component.ts","./src/app/lists/lists.component.html","./src/app/lists/lists.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/members/members-messages/members-messages.component.html","./src/app/members/members-messages/members-messages.component.ts","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/models/pagination.ts","./src/app/models/user-params.ts","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/service/alertify.service.ts","./src/app/service/auth.service.ts","./src/app/service/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { AuthService } from '../service/auth.service';\nimport { Alertifyjs } from '../service/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router, private alertify: Alertifyjs) {\n  }\n\n  canActivate () : boolean {\n      if (this.authService.loggedIn()) {\n        return true;        \n      }\n      else {\n        this.alertify.error(\"please login first\");\n        this.router.navigate([\"/home\"]);\n        return false;\n      }\n  }\n  \n}\n","import { CanDeactivate } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\n\r\n@Injectable()\r\n\r\nexport class PerventClose implements CanDeactivate<MemberEditComponent>{\r\n    canDeactivate(component: MemberEditComponent) {\r\n        if (component.editForm.dirty) {\r\n            return confirm(\"Your changes will not gonna be saved\");\r\n        }\r\n        return true;\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from 'src/app/models/user';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { PaginationResult } from '../models/pagination';\r\nimport { UserParams } from '../models/user-params';\r\nimport { AuthService } from '../service/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class listsResolver implements Resolve<PaginationResult<User[]>> {\r\n\r\n    constructor(private userService: UserService, private authService: AuthService) {  \r\n    }\r\n\r\n    userparams: UserParams = new UserParams();\r\n    likesParams= \"likees\";\r\n    \r\n    resolve(route: ActivatedRouteSnapshot): Observable<PaginationResult<User[]>>  {\r\n        return this.userService.getAllUsers(this.userparams.pageNumber, this.userparams.pageSize, null, this.likesParams);\r\n        //return null;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { User } from 'src/app/models/user';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { Alertifyjs } from 'src/app/service/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MemberDetailsResolver implements Resolve<User> {\r\n\r\n    constructor(private userService: UserService, private alertify: Alertifyjs) {\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(route.params['id']).pipe(\r\n            catchError(function(error) {\r\n                this.alertify.error(error);\r\n                //return of(null);\r\n                // return Observable.throw(error.statusText);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n    \r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, Router, ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from 'src/app/models/user';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class MembersEditResolver implements Resolve<User> {\r\n\r\n    constructor(private userService: UserService, private route: ActivatedRoute, private authService: AuthService) {\r\n        \r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User>  {\r\n        return this.userService.getUser(this.authService.username.nameid);\r\n    }\r\n\r\n    \r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from 'src/app/models/user';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { PaginationResult } from '../models/pagination';\r\nimport { UserParams } from '../models/user-params';\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class MembersListResolver implements Resolve<PaginationResult<User[]>> {\r\n\r\n    constructor(private userService: UserService) {  \r\n    }\r\n\r\n    userparams: UserParams = new UserParams();\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<PaginationResult<User[]>>  {\r\n        return this.userService.getAllUsers(this.userparams.pageNumber, this.userparams.pageSize);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of, pipe } from 'rxjs';\r\nimport { Message } from '../models/message';\r\nimport { UserService } from '../service/user.service';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { PaginationResult } from '../models/pagination';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Alertifyjs } from '../service/alertify.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\n\r\n\r\nexport class MessagesResolver implements Resolve<PaginationResult<Message[]>> {\r\n\r\n    pageSize: number = 6;\r\n    pageNumber: number = 1;\r\n    MessageType: string = \"Unread\";\r\n\r\n    constructor(private userService: UserService, private authService: AuthService, private alertify: Alertifyjs, private router: Router) {\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<PaginationResult<Message[]>> {\r\n        return this.userService.getMessages(this.authService.username.nameid, this.pageNumber, this.pageSize, this.MessageType).pipe(\r\n            catchError(error => {\r\n                this.alertify.error(\"Error retriving messages\");\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            }\r\n            )\r\n        );\r\n\r\n    }\r\n}","<app-nav></app-nav>\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './service/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'DatingApp-SPA';\n  username: any;\n  /**\n   *\n   */\n  constructor(private authService:AuthService) {\n    \n  }\n  ngOnInit(): void {\n    var token = localStorage.getItem('token');\n    if (token) {\n    this.authService.username = this.authService.jwtHelper.decodeToken(token);\n    }\n  }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NavComponent } from './nav/nav.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './home/register/register.component';\nimport { BsDropdownModule } from 'ngx-bootstrap';\n\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MembersComponent } from './members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { RouterModule } from '@angular/router';\nimport { routes } from './routes';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { environment } from 'src/environments/environment';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { TabsModule } from 'ngx-bootstrap';\nimport { MembersListResolver } from './_resolvers/members-list.resolver';\nimport { MemberDetailsResolver } from './_resolvers/members-details.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MembersEditResolver } from './_resolvers/members-edit.resolver';\nimport { AuthService } from './service/auth.service';\nimport { UserService } from './service/user.service';\nimport { PerventClose } from './_guards/preventClose.guard';\nimport { PaginationModule } from 'ngx-bootstrap';\nimport { listsResolver } from './_resolvers/lists.resolver';\nimport { MessagesResolver } from './_resolvers/messages.resolver';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { MembersMessagesComponent } from './members/members-messages/members-messages.component';\n\nexport function getToken() {\n   return localStorage.getItem('token');\n}\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      HomeComponent,\n      RegisterComponent,\n      MembersComponent,\n      MessagesComponent,\n      ListsComponent,\n      MemberCardComponent,\n      MemberDetailComponent,\n      MemberEditComponent,\n      MembersMessagesComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      BsDropdownModule.forRoot(),\n      BrowserAnimationsModule,\n      RouterModule.forRoot(routes),\n      TabsModule.forRoot(),\n      PaginationModule.forRoot(),\n      BrowserAnimationsModule,\n      BsDatepickerModule.forRoot(),\n      TimeagoModule.forRoot(),\n      JwtModule.forRoot({\n         config : {\n            tokenGetter : getToken\n         }\n      }),\n      ReactiveFormsModule\n   ],\n   providers: [\n      MembersListResolver,\n      MemberDetailsResolver,\n      MembersEditResolver,\n      AuthService,\n      UserService,\n      PerventClose,\n      listsResolver,\n      MessagesResolver\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n   \n})\nexport class AppModule { }\n","<app-nav></app-nav>\n<div class=\"container mt-5\">\n  <br>\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n    <h1>Find your match</h1>\n    <p class=\"lead\">Come on in to view your matches... All you need to do is sign up!</p>\n    <div class=\"text-center\">\n      <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"registerToggle()\">Register</button>\n      <!-- <button class=\"btn btn-info btn-lg\">Learn more</button> -->\n    </div>\n  </div>\n\n \n  <div *ngIf=\"registerMode\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">\n        <h1>Find your match</h1>\n        <p class=\"lead\">Come on in to view your matches... All you need to do is sign up!</p>\n        <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  registerMode = false;\n  values: any;\n  constructor(private httpClient:HttpClient) { }\n  form: FormGroup;\n\n  ngOnInit() {\n  }\n\n  registerToggle() {\n    this.registerMode = true;\n  }\n  \n  cancelRegisterMode(registerMode: boolean){\n    this.registerMode = registerMode;\n  }\n}\n","<div>\n  <form [formGroup]=\"registrationForm\" (ngSubmit)=\"register()\">\n    <br>\n    <h2 class=\"text-center text-primary\">Sign Up</h2>\n    <hr>\n    <!-- Gender -->\n    <div class=\"form-group\">\n      <label class=\"control-label\" style=\"margin-right:10px\">I am a: </label>\n      <label class=\"radio-inline\">\n        <input class=\"mr-3\" type=\"radio\" value=\"male\" formControlName=\"gender\">Male\n      </label>\n      <label class=\"radio-inline ml-3\">\n        <input class=\"mr-3\" type=\"radio\" value=\"female\" formControlName=\"gender\">Female\n      </label>\n    </div>\n\n    <!-- username -->\n    <div class=\"form-group\">\n      <input [ngClass]=\"{'is-invalid': this.getUsername.errors && this.getUsername.touched}\" type=\"text\"\n        class=\"form-control\" placeholder=\"Username\" formControlName=\"username\">\n      <div class=\"invalid-feedback input-group\" *ngIf=\"this.getUsername.touched && this.getUsername.errors?.required\">\n        please enter your username</div>\n    </div>\n\n    <!-- knownAs -->\n    <div class=\"form-group\">\n      <input\n        [ngClass]=\"{'is-invalid': registrationForm.get('knownAs').errors && registrationForm.get('knownAs').touched}\"\n        class=\"form-control\" placeholder=\"Known as\" formControlName=\"knownAs\">\n      <div class=\"invalid-feedback\"\n        *ngIf=\"registrationForm.get('knownAs').touched && registrationForm.get('knownAs').hasError('required')\">Known as\n        is required</div>\n    </div>\n\n    <!-- Email -->\n    <div class=\"form-group\">\n      <input [ngClass]=\"{'is-invalid': this.getEmail.errors && this.getEmail.touched}\" type=\"text\" class=\"form-control\"\n        placeholder=\"email\" formControlName=\"email\">\n      <div class=\"invalid-feedback input-group\" *ngIf=\"this.getEmail.touched && this.getEmail.errors?.required\">Please\n        Enter your Email</div>\n    </div>\n\n    <!-- DateTime -->\n    <div class=\"form-group\">\n      <input\n        [ngClass]=\"{'is-invalid': registrationForm.get('dateOfBirth').errors && registrationForm.get('dateOfBirth').touched}\"\n        class=\"form-control\" placeholder=\"Date of Birth\" formControlName=\"dateOfBirth\" type=\"text\" bsDatepicker\n        [bsConfig]=\"bsConfig\">\n      <div class=\"invalid-feedback\"\n        *ngIf=\"registrationForm.get('dateOfBirth').touched && registrationForm.get('dateOfBirth').hasError('required')\">\n        Date of Birth is required</div>\n    </div>\n\n    <!-- Password -->\n    <div class=\"form-group\">\n      <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\"\n        [ngClass]=\"{'is-invalid input-group': this.getPassword.errors && this.getPassword.touched}\">\n\n      <div class=\"invalid-feedback input-group\" *ngIf=\"this.getPassword.touched && this.getPassword.errors?.required\">\n        Please Enter your password\n      </div>\n\n      <div class=\"invalid-feedback input-group\" *ngIf=\"this.getPassword.touched && this.getPassword.errors?.min\">\n        Please enter your password with min 4 characters\n      </div>\n\n      <div class=\"invalid-feedback input-group\" *ngIf=\"this.getPassword.touched && this.getPassword.errors?.max\">Please\n        enter your password with max 10 characters</div>\n    </div>\n    <!--  -->\n\n    <!-- Confirm Password -->\n    <div class=\"form-group\">\n      <input [ngClass]=\"{'is-invalid': this.getConfirmPassword.errors && this.getConfirmPassword.touched}\"\n        type=\"password\" class=\"form-control\" placeholder=\"Confirm Password\" formControlName=\"confirmPassword\">\n      <div class=\"invalid-feedback input-group\"\n        *ngIf=\"this.getConfirmPassword.touched && this.getConfirmPassword.errors?.required\">Please confirm your password\n      </div>\n\n      <div class=\"invalid-feedback input-group\"\n        *ngIf=\"this.getConfirmPassword.touched && this.registrationForm.errors?.mismatch\">\n        Password doesn't match\n      </div>\n\n    </div>\n\n    <!-- City -->\n    <div class=\"form-group\">\n      <input [ngClass]=\"{'is-invalid': registrationForm.get('city').errors && registrationForm.get('city').touched}\"\n        class=\"form-control\" placeholder=\"City\" formControlName=\"city\">\n      <div class=\"invalid-feedback\"\n        *ngIf=\"registrationForm.get('city').touched && registrationForm.get('city').hasError('required')\">City is\n        required\n      </div>\n    </div>\n\n    <!-- Country -->\n    <div class=\"form-group\">\n      <input\n        [ngClass]=\"{'is-invalid': registrationForm.get('country').errors && registrationForm.get('country').touched}\"\n        class=\"form-control\" placeholder=\"Country\" formControlName=\"country\">\n      <div class=\"invalid-feedback\"\n        *ngIf=\"registrationForm.get('country').touched && registrationForm.get('country').hasError('required')\">Country\n        is\n        required</div>\n    </div>\n\n    <div class=\"form-group text-center\">\n      <button class=\"btn btn-success\" type=\"submit\">Register</button>\n      <button class=\"btn btn-default\" type=\"button\" (click)=\"Cancel()\">Cancel</button>\n    </div>\n\n  </form>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../../service/auth.service';\nimport { error } from '@angular/compiler/src/util';\nimport { Alertifyjs } from 'src/app/service/alertify.service'\nimport { FormGroup, FormControl, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { User } from 'src/app/models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent implements OnInit {\n\n  model: any = {};\n  registrationForm: FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>;\n  colorTheme = 'theme-red';\n  user: User;\n\n  @Output()\n  cancelRegister = new EventEmitter();\n\n  constructor(private AuthService: AuthService, private notifyService: Alertifyjs, private route: Router) { }\n\n  ngOnInit() {\n    this.bsConfig = Object.assign({}, { containerClass: this.colorTheme, isAnimated: true });\n\n    this.registrationForm = new FormGroup({\n      gender: new FormControl('male', Validators.required),\n      username: new FormControl('', Validators.required),\n      knownAs: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      dateOfBirth: new FormControl('', Validators.required),\n      password: new FormControl('', [Validators.required, Validators.min(4), Validators.max(10)]),\n      confirmPassword: new FormControl('', Validators.required),\n      city: new FormControl('', Validators.required),\n      country: new FormControl('', Validators.required)\n    }, this.validateConfirmPassword);\n  }\n\n  validateConfirmPassword(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value ? null : { 'mismatch': true };\n  }\n\n  get getUsername(): FormControl {\n    return this.registrationForm.get('username') as FormControl;\n  }\n\n  get getPassword(): FormControl {\n    return this.registrationForm.get('password') as FormControl;\n  }\n\n  get getEmail(): FormControl {\n    return this.registrationForm.get('email') as FormControl;\n  }\n\n  get getConfirmPassword(): FormControl {\n    return this.registrationForm.get('confirmPassword') as FormControl;\n  }\n\n  register() {\n    if (this.registrationForm.valid) {\n        var user = Object.assign({}, this.registrationForm.value);\n        this.AuthService.register(user).subscribe(() => {\n        this.route.navigate['/members'];\n      }, () => {\n        this.notifyService.error(\"Make sure that you run your api first\");\n      });\n    }\n  }\n\n  Cancel() {\n    this.cancelRegister.emit(false);\n  }\n\n  static cannotContainSpace(control: AbstractControl): ValidationErrors | null {\n    if ((control.value as string).indexOf(' ') >= 0) {\n      return { cannotContainSpace: true }\n    }\n    return null;\n  }\n\n}","<div class=\"text-center mt-8 \">\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\'ve Liked'}} : {{pagination.totalItems}}</h2>\n</div>\n\n<div class=\"container mt-8\">\n\n  <div class=\"row\">\n    <div class=\"btn-group\">\n      <!-- <input class=\"btn btn-primary\" [(ngModel)]=\"likesParam\"  btnRadio=\"Likers\"\n        (click)=\"loadUsers()\">Members who like me</button> -->\n      <!-- <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\"  btnRadio=\"Likees\"\n        (click)=\"loadUsers()\">Members who I like</button> -->\n    </div>\n  </div>\n  <br>\n\n  <div class=\"row\">\n    <div *ngFor=\"let user of users\" class=\"col-sm-6 col-md-4 col-lg-4 col-xl-2\">\n      <app-member-card [user]=\"user\"></app-member-card>\n    </div>\n  </div>\n\n\n\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination [boundaryLinks]=\"true\" \n              [totalItems]=\"pagination.totalItems\" \n              [itemsPerPage]=\"pagination.pageSize\"\n              [(ngModel)]=\"pagination.pageNumber\" \n              (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\"\n              firstText=\"&laquo;\" lastText=\"&raquo;\"\n  >\n\n  </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, RouterLink, Routes, ActivatedRouteSnapshot, ActivatedRoute } from '@angular/router';\nimport { User } from '../models/user';\nimport { PaginationResult, Pagination } from '../models/pagination';\nimport { UserService } from '../service/user.service';\nimport { Alertifyjs } from '../service/alertify.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(private router: ActivatedRoute, private userService: UserService, private alterify: Alertifyjs) { }\n\n  ngOnInit(): void {\n    this.router.data.subscribe((response) => {\n      this.users = response['users'].result;\n      this.pagination = response['users'].pagination;\n    });\n    this.likesParam = 'Likers';\n  }\n\n  loadUsers() {\n    this.userService\n      .getAllUsers(\n        this.pagination.pageNumber,\n        this.pagination.pageSize,\n        null,\n        this.likesParam).subscribe((res: PaginationResult<User[]>) => {\n          this.users = res.result;\n          this.pagination = res.pagination;\n        },\n          error => {\n            this.alterify.error(error);\n          }\n        );\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.pageNumber = event.page;\n    this.loadUsers();\n  }\n\n}\n","<div class=\"card mb-4\">\n    <div class=\"card-img-wrapper\">\n        <img class=\"card-img-top\" src=\"{{user.photoUrl || '../../../../../assets/user.jpg'}}\" alt=\"{{user.knownAs}}\" />\n        <ul class=\"list-inline member-icons animate text-center\">\n            <li class=\"list-inline-item\">\n                <button class=\"btn btn-primary\" [routerLink] = \"['/details', user.id]\">\n                    <i class=\"fa fa-user\"></i>\n                </button>\n                <button class=\"btn btn-primary\" (click)=\"like(user.id)\">\n                    <i class=\"fa fa-heart\"> </i>\n                </button>\n                <button class=\"btn btn-primary\" [routerLink] = \"['/details', user.id]\" [queryParams]=\"{ tab: 3 }\">\n                    <i class=\"fa fa-envelope\"></i>\n                </button>\n            </li>\n\n        </ul>\n    </div>\n    <div class=\"card-body p-1\">\n        <h6 class=\"card-title text-center mb-1\"><i class=\"fa fa-user\"></i>\n            {{user.knownAs}}, {{user.age}}\n        </h6>\n        <p class=\"card-text text-muted text-center \">\n            {{user.city}}\n        </p>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { Alertifyjs } from 'src/app/service/alertify.service';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n\n  @Input()\n  user: User;\n\n  constructor(private authService: AuthService, private alertify: Alertifyjs, private userService: UserService) { }\n\n  ngOnInit(): void {\n  }\n\n  like(recepientId: number) {\n    this.userService.getLikes(this.authService.username.nameid, recepientId).subscribe((response)=>{\n      console.log(response);\n      this.alertify.message(\"You Liked \" + this.user.knownAs);\n    }, (error)=>{\n      console.log(error);\n    });\n  }\n\n}\n","<div class=\"container mt-4\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <div class=\"card mt-4\">\n                <img src=\"{{userDetails.photoUrl || '../../../../../assets/user.jpg'}}\" alt=\"{{userDetails.knownAs}}\" class=\"card-img-top img-thumbnail\">\n                <div class=\"card-body ml-2 mr-2\">\n                    <div>\n                        <strong>Location:</strong>\n                        <p>{{userDetails.city}}, {{userDetails.country}}</p>\n                    </div>\n                    <div>\n                        <strong>Age</strong>\n                        <p>{{userDetails.age}}</p>\n                    </div>\n                    <div>\n                        <strong>Last Active</strong>\n                        <p>{{userDetails.lastActive | timeago}}</p>\n                    </div>\n\n                    <div>\n                        <strong>Member Since</strong>\n                        <p>{{userDetails.created | date}}</p>\n                    </div>\n                </div>\n                <div class=\"card footer\">\n                    <div class=\"btn-group d-flex\">\n                        <button class=\"btn btn-primary w-100\">Like</button>\n                        <button class=\"btn btn-success w-100\">Message</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-8 mt-4\">\n            <div class=\"tab-panel\">\n                <tabset class=\"member-tabset\" #memberTabs>\n                    <tab heading=\"About {{userDetails?.username}}\">\n                        <h4>Description</h4>\n                        <p>{{userDetails.introduction}}</p>\n                        <h4>Looking For</h4>\n                        <p>{{userDetails.lookingFor}}</p>\n                    </tab>\n                    <tab heading=\"Interests\">\n                        <h4>Interests</h4>\n                        <p>{{userDetails.interests}}</p>\n                    </tab>\n                    <tab heading=\"Photos\">\n                        <h4>Photos</h4>\n                    </tab>\n                    <tab heading=\"Messages\">\n                        <app-members-messages [recipientId]=\"userDetails.id\"></app-members-messages>\n                    </tab>\n                </tabset>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UserService } from 'src/app/service/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Alertifyjs } from 'src/app/service/alertify.service';\nimport { User } from 'src/app/models/user';\nimport { TabsetComponent } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n\n  userDetails: User;\n  recipientId: number;\n  @ViewChild('memberTabs', { static: true }) staticTabs: TabsetComponent;\n  \n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // this.getUserDetails();\n    this.route.data.subscribe( (data) => {\n      this.userDetails = data['user'];\n      //console.log(this.userDetails);\n    });\n\n    this.route.queryParams.subscribe((response)=>{\n      const selectedTab = response['tab'];\n      this.staticTabs.tabs[selectedTab].active = true;\n    })\n  }\n\n  // getUserDetails() {\n  //   this.userService.getUser(this.route.snapshot.params['id']).subscribe((response) => {\n  //     this.userDetails = response;\n  //   }, (error) => {\n  //     this.alertify.error(error);\n  //   })\n  // }\n\n\n}\n","<div class=\"container mt-4\">\n    <div class=\"row\">\n        <div class=\"col-sm-4 mt-4\">\n            <h1>Your Profile</h1>\n        </div>\n        <div class=\"col-sm-8 mt-4\">\n            <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\n                <strong>Information:</strong> You have made some changes\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <div class=\"card mt-4\">\n                <img src=\"{{user.photoUrl || '../../../../../assets/user.jpg'}}\" alt=\"{{user.knownAs}}\" class=\"card-img-top img-thumbnail\">\n                <div class=\"card-body ml-2 mr-2\">\n                    <div>\n                        <strong>Location:</strong>\n                        <p>{{user.city}}, {{user.country}}</p>\n                    </div>\n                    <div>\n                        <strong>Age</strong>\n                        <p>{{user.age}}</p>\n                    </div>\n                    <div>\n                        <strong>Last Active</strong>\n                        <p>{{user.lastActive | timeago}}</p>\n                    </div>\n\n                    <div>\n                        <strong>Member Since</strong>\n                        <p>{{user.created | date}}</p>\n                    </div>\n                </div>\n                <div class=\"card footer\">\n                    <div class=\"btn-group d-flex\">\n                        <button [disabled]=\"!editForm.dirty\" form=\"editForm\" class=\"btn btn-success w-100\">Save Changes</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-8 mt-4\">\n            <div class=\"tab-panel\">\n                <tabset class=\"member-tabset\">\n                    <tab heading=\"About {{user.username}}\">\n                        <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"saveChanges()\" >\n                            <h4>Description</h4>\n                            <textarea name=\"introduction\" rows=\"7\" [(ngModel)]=\"user.introduction\"\n                                class=\"form-control\"></textarea>\n                            <h4>Looking For</h4>\n                            <textarea name=\"lookingFor\" rows=\"7\" [(ngModel)]=\"user.lookingFor\"\n                                class=\"form-control\"></textarea>\n                            <h4>Interests</h4>\n                            <textarea name=\"interests\" rows=\"7\" [(ngModel)]=\"user.interests\"\n                                class=\"form-control\"></textarea>\n                        </form>\n                    </tab>\n                    <tab heading=\"Edit Photos\">\n                        <h4>Photos</h4>\n                    </tab>\n                </tabset>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/service/user.service';\nimport { Alertifyjs } from 'src/app/service/alertify.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n\n  user: User;\n\n  @ViewChild(\"editForm\")\n  editForm: NgForm\n\n  constructor(private route: ActivatedRoute, private userService: UserService, private alertify: Alertifyjs) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe((data) => {\n      this.user = data['userToEdit'];\n    })\n  }\n\n  saveChanges() {\n    this.userService.updateUser(this.user.id, this.user).subscribe((response) => {\n      this.alertify.message(\"Data Updated Successfully\");\n      //this.editForm.dirty = false;\n      this.editForm.reset(this.user);\n    }, (error) => {\n      console.log(error)\n    })\n  }\n}\n","<div class=\"container text-center mt-3\">\r\n    <h2 class=\"mt-5\">Your matches - {{this.paginationInfo.totalItems}} found</h2>\r\n    <form class=\"form-inline\" novalidate #filerForm=\"ngForm\" (ngSubmit)=\"getUsers()\">\r\n        <div class=\"form-group\">\r\n            <label for=\"minAge\">Age From</label>\r\n            <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"minAge\"\r\n                [(ngModel)]=\"this.userParams.minAge\" name=\"minAge\">\r\n        </div>\r\n    \r\n        <div class=\"form-group px-2\">\r\n            <label for=\"maxAge\">Age To</label>\r\n            <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"maxAge\"\r\n                [(ngModel)]=\"this.userParams.maxAge\" name=\"maxAge\">\r\n        </div>\r\n    \r\n        <div class=\"form-group px-2\">\r\n            <label for=\"gender\">Show: </label>\r\n            <select class=\"form-control ml-1\" style=\"width: 130px\" [(ngModel)]=\"this.userParams.gender\" name=\"gender\">\r\n                <option *ngFor=\"let item of this.gender\" [value]=\"item.name\" >\r\n                    {{item.value}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-left:10px\">Apply Filters</button>\r\n        <button type=\"button\" class=\"btn btn-info\" style=\"margin-left:10px\">Reset Filter</button>\r\n    \r\n    </form>\r\n    <br>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div class=\"container mt-5\">\r\n    <div class=\"row\">\r\n        <div *ngFor=\"let user of users\" class=\"col-lg-2 col-md-3 col-sm-6\">\r\n            <app-member-card [user]=user></app-member-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"d-flex justify-content-center\">\r\n\r\n    <pagination [boundaryLinks]=\"true\" \r\n                [totalItems]=\"this.paginationInfo.totalItems\"\r\n                (pageChanged)=\"pageChanged($event)\"\r\n                [(ngModel)]=\"this.paginationInfo.pageNumber\" \r\n                [itemsPerPage]=\"this.userParams.pageSize\" \r\n                previousText=\"&lsaquo;\"\r\n                nextText=\"&rsaquo;\" \r\n                firstText=\"&laquo;\" \r\n                lastText=\"&raquo;\" >\r\n    </pagination>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../service/user.service';\nimport { User } from '../../models/user';\nimport { Alertifyjs } from '../../service/alertify.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PaginationResult, Pagination } from 'src/app/models/pagination';\nimport { UserParams } from 'src/app/models/user-params';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-members',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MembersComponent implements OnInit {\n\n  users: User[];\n  paginationInfo: Pagination;\n  userParams: UserParams = new UserParams();\n  gender: any;\n  defaultValue: string;\n\n  constructor(private userService: UserService, private authService: AuthService, private route: ActivatedRoute, private router: Router, private alertify: Alertifyjs) { }\n\n  ngOnInit(): void {\n\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.paginationInfo = data['users'].pagination;\n    });\n    this.gender = [{ name: 'male', value: 'males' }, { name: 'female', value: 'females' }];\n    //console.log(this.gender);\n    this.getCurrentUser();\n    //this.userParams.gender = \n  }\n\n  getCurrentUser() {\n    this.userService.getUser(this.authService.username.nameid).subscribe((response) => {\n      this.userParams.gender = response.gender == \"male\" ? \"female\" : \"male\";;\n    }, (error) => {\n      console.log(error);\n    })\n  }\n\n  getUsers() {\n    this.userService.getAllUsers(this.paginationInfo.pageNumber, this.userParams.pageSize, this.userParams).subscribe(response => {\n      this.users = response.result;\n      this.paginationInfo = response.pagination;\n    }, error => {\n      this.alertify.error(error);\n    })\n  }\n\n  pageChanged(event: any): void {\n    this.paginationInfo.pageNumber = event.page;\n    this.getUsers();\n  }\n\n}\n","<div class=\"card\">\n  <!-- <div class=\"card-body\"> -->\n  <div *ngIf=\"messages?.length === 0\">\n    No messages yet... say hi by using the message box below\n  </div>\n  <div class=\"messaging\">\n    <div class=\"inbox_msg\">\n      <div class=\"mesgs\">\n        <div class=\"msg_history\">\n          <div *ngFor=\"let message of messages\">\n            <div class=\"incoming_msg\" *ngIf=\"message.recipientId != recipientId\">\n              <div class=\"incoming_msg_img\"> <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\">\n              </div>\n              <div class=\"received_msg\">\n                <div class=\"received_withd_msg\">\n                  <p>{{message.content}}</p>\n                  <span class=\"time_date\"> {{message.messageSent | timeago}}</span>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"outgoing_msg\" *ngIf=\"message.recipientId == recipientId\">\n              <div class=\"sent_msg\">\n                <p>{{message.content}}</p>\n                <span class=\"time_date_sent\">{{message.messageSent | timeago}}\n                  <div *ngIf=\"message.isRead\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"15\" id=\"msg-dblcheck-ack\" x=\"2063\"\n                      y=\"2076\">\n                      <path\n                        d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.88a.32.32 0 0 1-.484.032l-.358-.325a.32.32 0 0 0-.484.032l-.378.48a.418.418 0 0 0 .036.54l1.32 1.267a.32.32 0 0 0 .484-.034l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.88a.32.32 0 0 1-.484.032L1.892 7.77a.366.366 0 0 0-.516.005l-.423.433a.364.364 0 0 0 .006.514l3.255 3.185a.32.32 0 0 0 .484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\"\n                        fill=\"#4fc3f7\" />\n                    </svg>\n                  </div>\n                </span>\n              </div>\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"card-footer\">\n\n  <form #messageForm=\"ngForm\">\n    <div class=\"type_msg\">\n      <div class=\"input_msg_write\">\n        <input type=\"text\" [(ngModel)]=\"newMessage.content\" name=\"content\" required class=\"write_msg\"\n          placeholder=\"Type a message\" />\n        <button class=\"msg_send_btn\" (click)=\"sendMessage()\" type=\"button\">\n          <i class=\"fa fa-paper-plane-o\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n    <!-- <p class=\"text-center top_spac\"> Design by <a target=\"_blank\" href=\"#\">Sunil Rajput</a></p> -->\n  </form>\n  <!-- \n    <div class=\"input-group\">\n      <input type=\"text\" \n        placeholder=\"send a private message\" />\n\n      <div class=\"input-group-append\">\n        <button [disabled]=\"!messageForm.valid\" class=\"btn btn-primary\">\n          Send\n        </button>\n      </div>\n    </div> -->\n\n  <!-- </div> -->\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from 'src/app/models/message';\nimport { UserService } from 'src/app/service/user.service';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { Alertifyjs } from 'src/app/service/alertify.service';\nimport { tap, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-members-messages',\n  templateUrl: './members-messages.component.html',\n  styleUrls: ['./members-messages.component.css']\n})\nexport class MembersMessagesComponent implements OnInit {\n\n\n  messages: Message[];\n\n  newMessage: any = {};\n\n  @Input()\n  recipientId: number;\n\n  constructor(private userService: UserService, private authService: AuthService, private alertify: Alertifyjs) { }\n\n  ngOnInit(): void {\n    this.getThread();\n  }\n  getThread() {\n    var currentId = +this.authService.username.nameid;\n    this.userService.getThread(this.authService.username.nameid, this.recipientId)\n      .pipe(\n        tap(messages => {\n          for (let i = 0; i < messages.length; i++) {\n            //const element = this.messages[i];\n            if (messages[i].isRead === false && messages[i].recipientId === currentId) {\n              this.userService.readMessage(messages[i].id, currentId);\n            }\n          }\n        })\n        ).subscribe((response) => {\n          this.messages = response;\n          // for (let i = 0; i < this.messages.length; i++) {\n          //   const element = this.messages[i];\n          //   this.alertify.message(this.messages[i].senderKnowsAs);\n          // }\n        }, (error) => {\n          this.alertify.error(error.message);\n        })\n  }\n\n  sendMessage() {\n    this.newMessage.RecipientId = this.recipientId;\n    this.userService.createMessage(this.authService.username.nameid, this.newMessage).subscribe((response) => {\n      console.log(response);\n    }, (error => {\n      this.alertify.error(error.message); \n    }), () => {\n      this.getThread();\n      this.newMessage.content = \"\";\n    }\n    )\n  }\n}\n","<div class=\"container mt-5\">\n    <div class=\"row\">\n        <div class=\"btn-group  text-center\">\n            <button class=\"btn btn-primary\" ngDefaultControl name=\"btnUnread\" (click)=\"loadMessages('Unread')\">\n                <i class=\"fa fa-envelope\"></i> Unread\n            </button>\n            <button class=\"btn btn-primary\" ngDefaultControl name=\"btnInbox\" (click)=\"loadMessages('Inbox')\">\n                <i class=\"fa fa-envelope-open\"></i> Inbox\n            </button>\n            <button class=\"btn btn-primary\" ngDefaultControl name=\"btnOutBox\" (click)=\"loadMessages('Outbox')\">\n                <i class=\"fa fa-paper-plane\"></i> Outbox\n            </button>\n        </div>\n    </div>\n\n    <div class=\"row text-center\" *ngIf=\"messages.length == 0\">\n        <div class=\"col text-center mt-5\" ><strong class=\"mt-9\">No messages in the {{messageContainer}} mail box</strong></div>\n        <h3 class=\"center\"></h3>\n    </div>\n\n    <div class=\"row\" *ngIf=\"messages.length > 0\">\n        <table class=\"table table-hover\" style=\"cursor: pointer\">\n            <tr>\n                <th style=\"width: 40%\">Message</th>\n                <th style=\"width: 20%\" *ngIf=\"messageContainer == 'Outbox'\">To</th>\n                <th style=\"width: 20%\" *ngIf=\"messageContainer == 'Inbox'\">From</th>\n                <th style=\"width: 20%\">Sent / Received</th>\n                <th style=\"width: 20%\"></th>\n            </tr>\n            <tr *ngFor=\"let message of messages\"\n                [routerLink]=\"['/members',  messageContainer == 'Outbox' ? message.recipientId : message.senderId]\"\n                [queryParams]=\"{tab:3}\">\n                <td>{{message.content}}</td>\n                <td>\n                    <div *ngIf=\"messageContainer != 'Outbox'\">\n                        <!-- <img src={{message?.senderPhotoUrl}} class=\"img-circle rounded-circle\"> -->\n                        <strong>{{message.senderKnownAs}}</strong>\n                    </div>\n                    <div *ngIf=\"messageContainer == 'Outbox'\">\n                        <!-- <img src={{message?.recipientPhotoUrl}} class=\"img-circle rounded-circle\"> -->\n                        <strong>{{message.recipientKnownAs}}</strong>\n                    </div>\n                </td>\n                <td>{{message.messageSent | timeago }}</td>\n                <td>\n                    <button class=\"btn btn-danger\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"deleteMessage(message.id)\">Delete</button>\n                </td>\n            </tr>\n        </table>\n\n    </div>\n\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"this.pagination.totalItems > 0\">\n    <pagination [itemsPerPage]=\"this.pagination.pageSize\" [totalItems]=\"this.pagination.totalItems\"\n        previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\"\n        (pageChanged)=\"PageChanged($event)\" [(ngModel)]=\"this.pagination.pageNumber\" [boundaryLinks]=\"true\">\n    </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RouterLink, ActivatedRoute } from '@angular/router';\nimport { Message } from '../models/message';\nimport { Pagination, PaginationResult } from '../models/pagination';\nimport { UserService } from '../service/user.service';\nimport { Alertifyjs } from '../service/alertify.service';\nimport { AuthService } from '../service/auth.service';\n\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer: string;\n  \n  constructor(private routerLink: ActivatedRoute,\n    private userServcie: UserService, private alterify: Alertifyjs\n    , private authSerive: AuthService, private alert: Alertifyjs) { }\n\n  ngOnInit(): void {\n    this.messageContainer = \"Unread\";\n    this.routerLink.data.subscribe(response => {\n      this.messages = response['messages'].result;\n      this.pagination = response['messages'].pagination;\n    });\n  }\n\n  loadMessages(messageContainer: string) {\n    this.messageContainer = messageContainer\n    console.log(messageContainer);\n    this.userServcie.getMessages(this.authSerive.username.nameid, this.pagination.pageNumber\n      , this.pagination.pageSize, messageContainer).subscribe((response : any) => {\n        this.messages = response.result;\n        this.pagination = response.pagination;\n      })\n  }\n\n  PageChanged(event: any): void{\n    this.pagination.pageNumber = event.page;\n    this.loadMessages(this.messageContainer);\n  }\n\n  deleteMessage(messageId: number) {\n    this.alterify.confirm(\"Are you Sure you want to delete this message\", () => {\n      this.userServcie.deleteMessage(messageId, this.authSerive.username.nameid).subscribe(() => {\n        this.messages.splice(this.messages.findIndex(x => x.id == messageId), 1);\n      }, (error) => {\n        this.alterify.error(error);\n      })\n    })\n  }\n\n}\n","export interface Pagination {\r\n    pageNumber: number;\r\n    pageSize: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginationResult<T>{\r\n    result: T;\r\n    pagination: Pagination;\r\n}","export class UserParams {\r\n    pageSize: number = 12;\r\n    pageNumber: number = 1;\r\n    minAge: number = 18 ;\r\n    maxAge: number = 99 ;\r\n    gender: any;\r\n}","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n  <div class=\"container\">\n  <a class=\"navbar-brand\" [routerLink]=\"['/']\">Dating</a>\n\n  <ul class=\"navbar-nav mr-auto\" *ngIf=\"IsLoggedIn()\">\n    <li class=\"nav-item\" routerLinkActive=\"router-link-active\">\n      <a class=\"nav-link\"  [routerLink]=\"['/members']\" >Matches</a>\n    </li>\n    <li class=\"nav-item\" routerLinkActive=\"router-link-active\">\n      <a class=\"nav-link\" [routerLink]=\"['/lists']\" >Lists</a>\n    </li>\n    <li class=\"nav-item\" routerLinkActive=\"router-link-active\">\n      <a class=\"nav-link\" [routerLink]=\"['/messages']\" >Messages</a>\n    </li>\n  </ul>\n\n  <div *ngIf=\"IsLoggedIn()\" class=\"dropdown\" dropdown>\n    <button class=\"dropdown-toggle\" dropdownToggle>\n      \n      Welcome {{authService.username.unique_name}}\n     \n    </button>\n    <div class=\"dropdown-menu\" *dropdownMenu>\n      <a class=\"dropdown-item\" [routerLink]= \"['member/edit']\">Edit Profile</a>\n      <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\n    </div>\n  </div>\n\n\n  <form *ngIf=\"!IsLoggedIn()\" #loginForm=\"ngForm\" class=\"form-inline my-2 my-lg-0\">\n    <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"username\" name=\"username\" required\n      [(ngModel)]=\"model.username\">\n    <input class=\"form-control mr-sm-2\" type=\"password\" placeholder=\"password\" name=\"password\" required\n      [(ngModel)]=\"model.password\">\n    <button class=\"btn btn-success my-2 my-sm-0\" [disabled]=\"!loginForm.valid\" (click)=\"login()\">Login</button>\n  </form>\n\n  </div>\n</nav>\n<br>","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from '../service/auth.service';\nimport { error } from '@angular/compiler/src/util';\nimport { from } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Router } from '@angular/router';\nimport { Alertifyjs } from '../service/alertify.service';\n\n@Component({\n  selector: \"app-nav\",\n  templateUrl: \"./nav.component.html\",\n  styleUrls: [\"./nav.component.css\"]\n})\nexport class NavComponent implements OnInit {\n  constructor(public authService: AuthService, private router: Router, private alertify: Alertifyjs) { }\n  model: any = {};\n  val: any;\n  ngOnInit() {\n    // this.getData();\n\n    //console.log(this.authService.username);\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(\n      response => {\n        this.alertify.message(\"Logged in Successfully\");\n      }, (error) => {\n        this.alertify.error(\"you're not authorized to log in\");\n      }\n    );\n  }\n\n  // getData() {\n  //   const data = from(fetch('http://localhost:6100/api/values'));\n  //   // Subscribe to begin listening for async result\n  //   data.subscribe({\n  //     next(response) { console.log(response); },\n  //     error(err) { console.error('Error: ' + err); },\n  //     complete() { console.log('Completed'); }\n  //   });\n  // }\n\n  IsLoggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  logout() {\n    localStorage.removeItem(\"token\");\n    this.router.navigate(['/']);\n  }\n}\n","\r\nimport * as alertifyjs from 'alertifyjs'\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class Alertifyjs {\r\n  /**\r\n   *\r\n   */\r\n  constructor() {\r\n \r\n  }\r\n\r\n  confirm(message: string, ok: () => any) {\r\n    alertifyjs.confirm(message,\r\n      function (e: any) {\r\n        if (e) {\r\n          ok();\r\n        }\r\n        else { }\r\n      });\r\n  }\r\n\r\n  error(message: string) {\r\n    alertifyjs.error(message);\r\n  }\r\n\r\n  warning(message: string) {\r\n    alertifyjs.warning(message);\r\n  }\r\n\r\n  message(message: string) {\r\n    alertifyjs.message(message);\r\n  }\r\n\r\n  success() {\r\n    alertifyjs.error(\"success\");\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  url = 'http://localhost:6100/api/auth';\n  jwtHelper = new JwtHelperService();\n  //decodedToken = this.jwtHelper.decodeToken('token');\n\n  username: any;\n  constructor(private httpclient: HttpClient) { }\n\n  login(model: any) {\n    return this.httpclient.post(this.url + '/login', model).pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('token', user.token);\n          this.username = this.jwtHelper.decodeToken(user.token);\n          console.log(this.username.unique_name);\n        }\n      })\n    );\n  }\n\n  register(model: any) {\n    return this.httpclient.post(this.url + \"/register\", model);\n  }\n\n  loggedIn() {\n    var token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/user';\nimport { Pagination, PaginationResult } from '../models/pagination';\nimport { map, catchError } from 'rxjs/operators';\nimport { JsonPipe } from '@angular/common';\nimport { Alertifyjs } from './alertify.service';\nimport { Message } from '../models/message';\n\n//  const options = {\n//    headers : new HttpHeaders({\n//     \"Authorization\": \"Bearer \" + localStorage.getItem('token')\n//   })\n//  };\nconst PaginationMessageResult: PaginationResult<Message[]> = new PaginationResult<Message[]>();\nconst paginationResult: PaginationResult<User[]> = new PaginationResult<User[]>();\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserService {\n  constructor(private http: HttpClient, private alterify: Alertifyjs) { }\n\n  getAllUsers(pageNumber?, pageSize?, userParams?, likesParams?): Observable<PaginationResult<User[]>> {\n\n    let httpParams = new HttpParams();\n    httpParams = httpParams.append('pageNumber', pageNumber);\n    httpParams = httpParams.append('pageSize', pageSize);\n\n    if (userParams != null) {\n      httpParams = httpParams.append('minAge', userParams.minAge);\n      httpParams = httpParams.append('maxage', userParams.maxAge);\n      httpParams = httpParams.append('gender', userParams.gender);\n    }\n\n    if (likesParams === \"likees\") {\n      httpParams = httpParams.append('likees', 'true');\n\n    }\n    if (likesParams === \"likers\") {\n      httpParams = httpParams.append('likers', 'true');\n    }\n\n    return this.http.get<User[]>(environment.APIUrl + \"users\", { observe: 'response', params: httpParams })\n      .pipe(\n        map(response => {\n          paginationResult.result = response.body['responseBody'];\n          if (paginationResult.result == null && response.body['exception'] != null) {\n            this.alterify.error(response.body['exception']);\n          }\n          if (response.headers.get('Pagination') != null) {\n            var paginationHeaderValue = response.headers.get(\"Pagination\");\n            paginationResult.pagination = JSON.parse(paginationHeaderValue);\n          }\n          return paginationResult;\n        })\n      )\n  }\n\n  getUser(id: number): Observable<User> {\n    return this.http.get<User>(environment.APIUrl + \"users/\" + id);\n  }\n\n  updateUser(id: number, user: User): Observable<User> {\n    return this.http.put<User>(environment.APIUrl + \"users/\" + id, user);\n  }\n\n  getLikes(id: number, recepientId: number) {\n    return this.http.post(environment.APIUrl + 'users/' + id + '/like/' + recepientId, {});\n  }\n\n  getMessages(userId: number, pageNumber?, pageSize?, messageContainer?): Observable<PaginationResult<Message[]>> {\n    var httpParams = new HttpParams();\n\n    //httpParams = httpParams.append(\"MessageType\", \"Unread\");\n\n    if (pageNumber != null && pageSize != null) {\n      httpParams = httpParams.append(\"PageNumber\", pageNumber);\n      httpParams = httpParams.append(\"PageSize\", pageSize);\n    }\n\n    if (messageContainer != null) {\n      httpParams = httpParams.append(\"MessageType\", messageContainer);\n    }\n\n    return this.http.get<Message[]>(environment.APIUrl + \"users/\" + userId + \"/Messages\",\n      { observe: 'response', params: httpParams }).pipe(\n        map(response => {\n          PaginationMessageResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            //console.log(response.headers.get('response'));\n            PaginationMessageResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n\n          return PaginationMessageResult;\n\n        })\n      );\n  }\n\n  getThread(id, recepientId) {\n    return this.http.get<Message[]>(environment.APIUrl + \"users/\" + id + \"/Messages/thread/\" + recepientId);\n  }\n\n  createMessage(id: number, message: Message) {\n    return this.http.post<Message>(environment.APIUrl + \"users/\" + id + \"/messages\", message);\n  }\n\n  deleteMessage(id: number, userId: number) {\n    return this.http.post(environment.APIUrl + \"users/\" + userId + \"/messages/\" + id, {});\n  }\n\n  readMessage(messageId: number, userId) {\n    var url = environment.APIUrl + \"users/\" + userId + \"/messages/\" + messageId + \"/read\"\n    return this.http.post(url, {}).subscribe();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  APIUrl: \"http://localhost:6100/api/\",\n  domainUrl: \"localhost:6100\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}