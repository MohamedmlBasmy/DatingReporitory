{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_guards/auth.guard.ts","webpack:///src/app/_guards/preventClose.guard.ts","webpack:///src/app/_resolvers/lists.resolver.ts","webpack:///src/app/_resolvers/members-details.resolver.ts","webpack:///src/app/_resolvers/members-edit.resolver.ts","webpack:///src/app/_resolvers/members-list.resolver.ts","webpack:///src/app/_resolvers/messages.resolver.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/register/register.component.html","webpack:///src/app/home/register/register.component.ts","webpack:///src/app/lists/lists.component.html","webpack:///src/app/lists/lists.component.ts","webpack:///src/app/members/member-card/member-card.component.html","webpack:///src/app/members/member-card/member-card.component.ts","webpack:///src/app/members/member-detail/member-detail.component.html","webpack:///src/app/members/member-detail/member-detail.component.ts","webpack:///src/app/members/member-edit/member-edit.component.html","webpack:///src/app/members/member-edit/member-edit.component.ts","webpack:///src/app/members/member-list/member-list.component.html","webpack:///src/app/members/member-list/member-list.component.ts","webpack:///src/app/members/members-messages/members-messages.component.html","webpack:///src/app/members/members-messages/members-messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/models/pagination.ts","webpack:///src/app/models/user-params.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/service/alertify.service.ts","webpack:///src/app/service/auth.service.ts","webpack:///src/app/service/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","authService","router","alertify","loggedIn","error","navigate","PerventClose","component","editForm","dirty","confirm","listsResolver","userService","userparams","likesParams","route","getAllUsers","pageNumber","pageSize","MemberDetailsResolver","getUser","params","pipe","MembersEditResolver","username","nameid","MembersListResolver","MessagesResolver","MessageType","getMessages","AppComponent","title","token","localStorage","getItem","jwtHelper","decodeToken","getToken","AppModule","HomeComponent","httpClient","registerMode","RegisterComponent","AuthService","notifyService","model","colorTheme","cancelRegister","bsConfig","Object","assign","containerClass","isAnimated","registrationForm","gender","required","knownAs","email","dateOfBirth","password","min","max","confirmPassword","city","country","validateConfirmPassword","g","get","value","valid","user","register","subscribe","emit","control","indexOf","cannotContainSpace","ListsComponent","alterify","data","response","users","result","pagination","likesParam","res","event","page","loadUsers","MemberCardComponent","recepientId","getLikes","console","log","message","MemberDetailComponent","userDetails","queryParams","selectedTab","staticTabs","tabs","active","MemberEditComponent","updateUser","reset","MembersComponent","userParams","paginationInfo","name","getCurrentUser","getUsers","MembersMessagesComponent","newMessage","getThread","currentId","recipientId","messages","i","length","isRead","readMessage","RecipientId","createMessage","content","MessagesComponent","routerLink","userServcie","authSerive","alert","messageContainer","loadMessages","messageId","deleteMessage","splice","findIndex","x","PaginationResult","UserParams","minAge","maxAge","NavComponent","login","removeItem","Alertifyjs","ok","httpclient","url","post","setItem","unique_name","isTokenExpired","PaginationMessageResult","paginationResult","UserService","http","httpParams","append","APIUrl","observe","body","headers","paginationHeaderValue","JSON","parse","put","userId","environment","production","domainUrl","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { AuthService } from '../service/auth.service';\nimport { Alertifyjs } from '../service/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router, private alertify: Alertifyjs) {\n  }\n\n  canActivate () : boolean {\n      if (this.authService.loggedIn()) {\n        return true;        \n      }\n      else {\n        this.alertify.error(\"please login first\");\n        this.router.navigate([\"/home\"]);\n        return false;\n      }\n  }\n  \n}\n","import { CanDeactivate } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\n\r\n@Injectable()\r\n\r\nexport class PerventClose implements CanDeactivate<MemberEditComponent>{\r\n    canDeactivate(component: MemberEditComponent) {\r\n        if (component.editForm.dirty) {\r\n            return confirm(\"Your changes will not gonna be saved\");\r\n        }\r\n        return true;\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from 'src/app/models/user';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { PaginationResult } from '../models/pagination';\r\nimport { UserParams } from '../models/user-params';\r\nimport { AuthService } from '../service/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class listsResolver implements Resolve<PaginationResult<User[]>> {\r\n\r\n    constructor(private userService: UserService, private authService: AuthService) {  \r\n    }\r\n\r\n    userparams: UserParams = new UserParams();\r\n    likesParams= \"likees\";\r\n    \r\n    resolve(route: ActivatedRouteSnapshot): Observable<PaginationResult<User[]>>  {\r\n        return this.userService.getAllUsers(this.userparams.pageNumber, this.userparams.pageSize, null, this.likesParams);\r\n        //return null;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { User } from 'src/app/models/user';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { Alertifyjs } from 'src/app/service/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MemberDetailsResolver implements Resolve<User> {\r\n\r\n    constructor(private userService: UserService, private alertify: Alertifyjs) {\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(route.params['id']).pipe(\r\n            catchError(function(error) {\r\n                this.alertify.error(error);\r\n                //return of(null);\r\n                // return Observable.throw(error.statusText);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n    \r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, Router, ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from 'src/app/models/user';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class MembersEditResolver implements Resolve<User> {\r\n\r\n    constructor(private userService: UserService, private route: ActivatedRoute, private authService: AuthService) {\r\n        \r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User>  {\r\n        return this.userService.getUser(this.authService.username.nameid);\r\n    }\r\n\r\n    \r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from 'src/app/models/user';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { PaginationResult } from '../models/pagination';\r\nimport { UserParams } from '../models/user-params';\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class MembersListResolver implements Resolve<PaginationResult<User[]>> {\r\n\r\n    constructor(private userService: UserService) {  \r\n    }\r\n\r\n    userparams: UserParams = new UserParams();\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<PaginationResult<User[]>>  {\r\n        return this.userService.getAllUsers(this.userparams.pageNumber, this.userparams.pageSize);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of, pipe } from 'rxjs';\r\nimport { Message } from '../models/message';\r\nimport { UserService } from '../service/user.service';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { PaginationResult } from '../models/pagination';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Alertifyjs } from '../service/alertify.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\n\r\n\r\nexport class MessagesResolver implements Resolve<PaginationResult<Message[]>> {\r\n\r\n    pageSize: number = 6;\r\n    pageNumber: number = 1;\r\n    MessageType: string = \"Unread\";\r\n\r\n    constructor(private userService: UserService, private authService: AuthService, private alertify: Alertifyjs, private router: Router) {\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<PaginationResult<Message[]>> {\r\n        return this.userService.getMessages(this.authService.username.nameid, this.pageNumber, this.pageSize, this.MessageType).pipe(\r\n            catchError(error => {\r\n                this.alertify.error(\"Error retriving messages\");\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            }\r\n            )\r\n        );\r\n\r\n    }\r\n}","<app-nav></app-nav>\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './service/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'DatingApp-SPA';\n  username: any;\n  /**\n   *\n   */\n  constructor(private authService:AuthService) {\n    \n  }\n  ngOnInit(): void {\n    var token = localStorage.getItem('token');\n    if (token) {\n    this.authService.username = this.authService.jwtHelper.decodeToken(token);\n    }\n  }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NavComponent } from './nav/nav.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './home/register/register.component';\nimport { BsDropdownModule } from 'ngx-bootstrap';\n\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MembersComponent } from './members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { RouterModule } from '@angular/router';\nimport { routes } from './routes';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { environment } from 'src/environments/environment';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { TabsModule } from 'ngx-bootstrap';\nimport { MembersListResolver } from './_resolvers/members-list.resolver';\nimport { MemberDetailsResolver } from './_resolvers/members-details.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MembersEditResolver } from './_resolvers/members-edit.resolver';\nimport { AuthService } from './service/auth.service';\nimport { UserService } from './service/user.service';\nimport { PerventClose } from './_guards/preventClose.guard';\nimport { PaginationModule } from 'ngx-bootstrap';\nimport { listsResolver } from './_resolvers/lists.resolver';\nimport { MessagesResolver } from './_resolvers/messages.resolver';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { MembersMessagesComponent } from './members/members-messages/members-messages.component';\n\nexport function getToken() {\n   return localStorage.getItem('token');\n}\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      HomeComponent,\n      RegisterComponent,\n      MembersComponent,\n      MessagesComponent,\n      ListsComponent,\n      MemberCardComponent,\n      MemberDetailComponent,\n      MemberEditComponent,\n      MembersMessagesComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      BsDropdownModule.forRoot(),\n      BrowserAnimationsModule,\n      RouterModule.forRoot(routes),\n      TabsModule.forRoot(),\n      PaginationModule.forRoot(),\n      BrowserAnimationsModule,\n      BsDatepickerModule.forRoot(),\n      TimeagoModule.forRoot(),\n      JwtModule.forRoot({\n         config: {\n            tokenGetter: getToken,\n            whitelistedDomains: [environment.domainUrl]\n         }\n      }),\n      ReactiveFormsModule\n   ],\n   providers: [\n      MembersListResolver,\n      MemberDetailsResolver,\n      MembersEditResolver,\n      AuthService,\n      UserService,\n      PerventClose,\n      listsResolver,\n      MessagesResolver\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n   \n})\nexport class AppModule { }\n","<app-nav></app-nav>\n<div class=\"container mt-5\">\n  <br>\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n    <h1>Find your match</h1>\n    <p class=\"lead\">Come on in to view your matches... All you need to do is sign up!</p>\n    <div class=\"text-center\">\n      <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"registerToggle()\">Register</button>\n      <!-- <button class=\"btn btn-info btn-lg\">Learn more</button> -->\n    </div>\n  </div>\n\n \n  <div *ngIf=\"registerMode\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">\n        <h1>Find your match</h1>\n        <p class=\"lead\">Come on in to view your matches... All you need to do is sign up!</p>\n        <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  registerMode = false;\n  values: any;\n  constructor(private httpClient:HttpClient) { }\n  form: FormGroup;\n\n  ngOnInit() {\n  }\n\n  registerToggle() {\n    this.registerMode = true;\n  }\n  \n  cancelRegisterMode(registerMode: boolean){\n    this.registerMode = registerMode;\n  }\n}\n","<div>\n  <form [formGroup]=\"registrationForm\" (ngSubmit)=\"register()\">\n    <br>\n    <h2 class=\"text-center text-primary\">Sign Up</h2>\n    <hr>\n    <!-- Gender -->\n    <div class=\"form-group\">\n      <label class=\"control-label\" style=\"margin-right:10px\">I am a: </label>\n      <label class=\"radio-inline\">\n        <input class=\"mr-3\" type=\"radio\" value=\"male\" formControlName=\"gender\">Male\n      </label>\n      <label class=\"radio-inline ml-3\">\n        <input class=\"mr-3\" type=\"radio\" value=\"female\" formControlName=\"gender\">Female\n      </label>\n    </div>\n\n    <!-- username -->\n    <div class=\"form-group\">\n      <input [ngClass]=\"{'is-invalid': this.getUsername.errors && this.getUsername.touched}\" type=\"text\"\n        class=\"form-control\" placeholder=\"Username\" formControlName=\"username\">\n      <div class=\"invalid-feedback input-group\" *ngIf=\"this.getUsername.touched && this.getUsername.errors?.required\">\n        please enter your username</div>\n    </div>\n\n    <!-- knownAs -->\n    <div class=\"form-group\">\n      <input\n        [ngClass]=\"{'is-invalid': registrationForm.get('knownAs').errors && registrationForm.get('knownAs').touched}\"\n        class=\"form-control\" placeholder=\"Known as\" formControlName=\"knownAs\">\n      <div class=\"invalid-feedback\"\n        *ngIf=\"registrationForm.get('knownAs').touched && registrationForm.get('knownAs').hasError('required')\">Known as\n        is required</div>\n    </div>\n\n    <!-- Email -->\n    <div class=\"form-group\">\n      <input [ngClass]=\"{'is-invalid': this.getEmail.errors && this.getEmail.touched}\" type=\"text\" class=\"form-control\"\n        placeholder=\"email\" formControlName=\"email\">\n      <div class=\"invalid-feedback input-group\" *ngIf=\"this.getEmail.touched && this.getEmail.errors?.required\">Please\n        Enter your Email</div>\n    </div>\n\n    <!-- DateTime -->\n    <div class=\"form-group\">\n      <input\n        [ngClass]=\"{'is-invalid': registrationForm.get('dateOfBirth').errors && registrationForm.get('dateOfBirth').touched}\"\n        class=\"form-control\" placeholder=\"Date of Birth\" formControlName=\"dateOfBirth\" type=\"text\" bsDatepicker\n        [bsConfig]=\"bsConfig\">\n      <div class=\"invalid-feedback\"\n        *ngIf=\"registrationForm.get('dateOfBirth').touched && registrationForm.get('dateOfBirth').hasError('required')\">\n        Date of Birth is required</div>\n    </div>\n\n    <!-- Password -->\n    <div class=\"form-group\">\n      <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\"\n        [ngClass]=\"{'is-invalid input-group': this.getPassword.errors && this.getPassword.touched}\">\n\n      <div class=\"invalid-feedback input-group\" *ngIf=\"this.getPassword.touched && this.getPassword.errors?.required\">\n        Please Enter your password\n      </div>\n\n      <div class=\"invalid-feedback input-group\" *ngIf=\"this.getPassword.touched && this.getPassword.errors?.min\">\n        Please enter your password with min 4 characters\n      </div>\n\n      <div class=\"invalid-feedback input-group\" *ngIf=\"this.getPassword.touched && this.getPassword.errors?.max\">Please\n        enter your password with max 10 characters</div>\n    </div>\n    <!--  -->\n\n    <!-- Confirm Password -->\n    <div class=\"form-group\">\n      <input [ngClass]=\"{'is-invalid': this.getConfirmPassword.errors && this.getConfirmPassword.touched}\"\n        type=\"password\" class=\"form-control\" placeholder=\"Confirm Password\" formControlName=\"confirmPassword\">\n      <div class=\"invalid-feedback input-group\"\n        *ngIf=\"this.getConfirmPassword.touched && this.getConfirmPassword.errors?.required\">Please confirm your password\n      </div>\n\n      <div class=\"invalid-feedback input-group\"\n        *ngIf=\"this.getConfirmPassword.touched && this.registrationForm.errors?.mismatch\">\n        Password doesn't match\n      </div>\n\n    </div>\n\n    <!-- City -->\n    <div class=\"form-group\">\n      <input [ngClass]=\"{'is-invalid': registrationForm.get('city').errors && registrationForm.get('city').touched}\"\n        class=\"form-control\" placeholder=\"City\" formControlName=\"city\">\n      <div class=\"invalid-feedback\"\n        *ngIf=\"registrationForm.get('city').touched && registrationForm.get('city').hasError('required')\">City is\n        required\n      </div>\n    </div>\n\n    <!-- Country -->\n    <div class=\"form-group\">\n      <input\n        [ngClass]=\"{'is-invalid': registrationForm.get('country').errors && registrationForm.get('country').touched}\"\n        class=\"form-control\" placeholder=\"Country\" formControlName=\"country\">\n      <div class=\"invalid-feedback\"\n        *ngIf=\"registrationForm.get('country').touched && registrationForm.get('country').hasError('required')\">Country\n        is\n        required</div>\n    </div>\n\n    <div class=\"form-group text-center\">\n      <button class=\"btn btn-success\" type=\"submit\">Register</button>\n      <button class=\"btn btn-default\" type=\"button\" (click)=\"Cancel()\">Cancel</button>\n    </div>\n\n  </form>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../../service/auth.service';\nimport { error } from '@angular/compiler/src/util';\nimport { Alertifyjs } from 'src/app/service/alertify.service'\nimport { FormGroup, FormControl, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { User } from 'src/app/models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent implements OnInit {\n\n  model: any = {};\n  registrationForm: FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>;\n  colorTheme = 'theme-red';\n  user: User;\n\n  @Output()\n  cancelRegister = new EventEmitter();\n\n  constructor(private AuthService: AuthService, private notifyService: Alertifyjs, private route: Router) { }\n\n  ngOnInit() {\n    this.bsConfig = Object.assign({}, { containerClass: this.colorTheme, isAnimated: true });\n\n    this.registrationForm = new FormGroup({\n      gender: new FormControl('male', Validators.required),\n      username: new FormControl('', Validators.required),\n      knownAs: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      dateOfBirth: new FormControl('', Validators.required),\n      password: new FormControl('', [Validators.required, Validators.min(4), Validators.max(10)]),\n      confirmPassword: new FormControl('', Validators.required),\n      city: new FormControl('', Validators.required),\n      country: new FormControl('', Validators.required)\n    }, this.validateConfirmPassword);\n  }\n\n  validateConfirmPassword(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value ? null : { 'mismatch': true };\n  }\n\n  get getUsername(): FormControl {\n    return this.registrationForm.get('username') as FormControl;\n  }\n\n  get getPassword(): FormControl {\n    return this.registrationForm.get('password') as FormControl;\n  }\n\n  get getEmail(): FormControl {\n    return this.registrationForm.get('email') as FormControl;\n  }\n\n  get getConfirmPassword(): FormControl {\n    return this.registrationForm.get('confirmPassword') as FormControl;\n  }\n\n  register() {\n    if (this.registrationForm.valid) {\n        var user = Object.assign({}, this.registrationForm.value);\n        this.AuthService.register(user).subscribe(() => {\n        this.route.navigate['/members'];\n      }, () => {\n        this.notifyService.error(\"Make sure that you run your api first\");\n      });\n    }\n  }\n\n  Cancel() {\n    this.cancelRegister.emit(false);\n  }\n\n  static cannotContainSpace(control: AbstractControl): ValidationErrors | null {\n    if ((control.value as string).indexOf(' ') >= 0) {\n      return { cannotContainSpace: true }\n    }\n    return null;\n  }\n\n}","<div class=\"text-center mt-8 \">\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\'ve Liked'}} : {{pagination.totalItems}}</h2>\n</div>\n\n<div class=\"container mt-8\">\n\n  <div class=\"row\">\n    <div class=\"btn-group\">\n      <!-- <input class=\"btn btn-primary\" [(ngModel)]=\"likesParam\"  btnRadio=\"Likers\"\n        (click)=\"loadUsers()\">Members who like me</button> -->\n      <!-- <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\"  btnRadio=\"Likees\"\n        (click)=\"loadUsers()\">Members who I like</button> -->\n    </div>\n  </div>\n  <br>\n\n  <div class=\"row\">\n    <div *ngFor=\"let user of users\" class=\"col-sm-6 col-md-4 col-lg-4 col-xl-2\">\n      <app-member-card [user]=\"user\"></app-member-card>\n    </div>\n  </div>\n\n\n\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination [boundaryLinks]=\"true\" \n              [totalItems]=\"pagination.totalItems\" \n              [itemsPerPage]=\"pagination.pageSize\"\n              [(ngModel)]=\"pagination.pageNumber\" \n              (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\"\n              firstText=\"&laquo;\" lastText=\"&raquo;\"\n  >\n\n  </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, RouterLink, Routes, ActivatedRouteSnapshot, ActivatedRoute } from '@angular/router';\nimport { User } from '../models/user';\nimport { PaginationResult, Pagination } from '../models/pagination';\nimport { UserService } from '../service/user.service';\nimport { Alertifyjs } from '../service/alertify.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(private router: ActivatedRoute, private userService: UserService, private alterify: Alertifyjs) { }\n\n  ngOnInit(): void {\n    this.router.data.subscribe((response) => {\n      this.users = response['users'].result;\n      this.pagination = response['users'].pagination;\n    });\n    this.likesParam = 'Likers';\n  }\n\n  loadUsers() {\n    this.userService\n      .getAllUsers(\n        this.pagination.pageNumber,\n        this.pagination.pageSize,\n        null,\n        this.likesParam).subscribe((res: PaginationResult<User[]>) => {\n          this.users = res.result;\n          this.pagination = res.pagination;\n        },\n          error => {\n            this.alterify.error(error);\n          }\n        );\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.pageNumber = event.page;\n    this.loadUsers();\n  }\n\n}\n","<div class=\"card mb-4\">\n    <div class=\"card-img-wrapper\">\n        <img class=\"card-img-top\" src=\"{{user.photoUrl || '../../../../../assets/user.jpg'}}\" alt=\"{{user.knownAs}}\" />\n        <ul class=\"list-inline member-icons animate text-center\">\n            <li class=\"list-inline-item\">\n                <button class=\"btn btn-primary\" [routerLink] = \"['/details', user.id]\">\n                    <i class=\"fa fa-user\"></i>\n                </button>\n                <button class=\"btn btn-primary\" (click)=\"like(user.id)\">\n                    <i class=\"fa fa-heart\"> </i>\n                </button>\n                <button class=\"btn btn-primary\" [routerLink] = \"['/details', user.id]\" [queryParams]=\"{ tab: 3 }\">\n                    <i class=\"fa fa-envelope\"></i>\n                </button>\n            </li>\n\n        </ul>\n    </div>\n    <div class=\"card-body p-1\">\n        <h6 class=\"card-title text-center mb-1\"><i class=\"fa fa-user\"></i>\n            {{user.knownAs}}, {{user.age}}\n        </h6>\n        <p class=\"card-text text-muted text-center \">\n            {{user.city}}\n        </p>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { Alertifyjs } from 'src/app/service/alertify.service';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n\n  @Input()\n  user: User;\n\n  constructor(private authService: AuthService, private alertify: Alertifyjs, private userService: UserService) { }\n\n  ngOnInit(): void {\n  }\n\n  like(recepientId: number) {\n    this.userService.getLikes(this.authService.username.nameid, recepientId).subscribe((response)=>{\n      console.log(response);\n      this.alertify.message(\"You Liked \" + this.user.knownAs);\n    }, (error)=>{\n      console.log(error);\n    });\n  }\n\n}\n","<div class=\"container mt-4\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <div class=\"card mt-4\">\n                <img src=\"{{userDetails.photoUrl || '../../../../../assets/user.jpg'}}\" alt=\"{{userDetails.knownAs}}\" class=\"card-img-top img-thumbnail\">\n                <div class=\"card-body ml-2 mr-2\">\n                    <div>\n                        <strong>Location:</strong>\n                        <p>{{userDetails.city}}, {{userDetails.country}}</p>\n                    </div>\n                    <div>\n                        <strong>Age</strong>\n                        <p>{{userDetails.age}}</p>\n                    </div>\n                    <div>\n                        <strong>Last Active</strong>\n                        <p>{{userDetails.lastActive | timeago}}</p>\n                    </div>\n\n                    <div>\n                        <strong>Member Since</strong>\n                        <p>{{userDetails.created | date}}</p>\n                    </div>\n                </div>\n                <div class=\"card footer\">\n                    <div class=\"btn-group d-flex\">\n                        <button class=\"btn btn-primary w-100\">Like</button>\n                        <button class=\"btn btn-success w-100\">Message</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-8 mt-4\">\n            <div class=\"tab-panel\">\n                <tabset class=\"member-tabset\" #memberTabs>\n                    <tab heading=\"About {{userDetails?.username}}\">\n                        <h4>Description</h4>\n                        <p>{{userDetails.introduction}}</p>\n                        <h4>Looking For</h4>\n                        <p>{{userDetails.lookingFor}}</p>\n                    </tab>\n                    <tab heading=\"Interests\">\n                        <h4>Interests</h4>\n                        <p>{{userDetails.interests}}</p>\n                    </tab>\n                    <tab heading=\"Photos\">\n                        <h4>Photos</h4>\n                    </tab>\n                    <tab heading=\"Messages\">\n                        <app-members-messages [recipientId]=\"userDetails.id\"></app-members-messages>\n                    </tab>\n                </tabset>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UserService } from 'src/app/service/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Alertifyjs } from 'src/app/service/alertify.service';\nimport { User } from 'src/app/models/user';\nimport { TabsetComponent } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n\n  userDetails: User;\n  recipientId: number;\n  @ViewChild('memberTabs', { static: true }) staticTabs: TabsetComponent;\n  \n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // this.getUserDetails();\n    this.route.data.subscribe( (data) => {\n      this.userDetails = data['user'];\n      //console.log(this.userDetails);\n    });\n\n    this.route.queryParams.subscribe((response)=>{\n      const selectedTab = response['tab'];\n      this.staticTabs.tabs[selectedTab].active = true;\n    })\n  }\n\n  // getUserDetails() {\n  //   this.userService.getUser(this.route.snapshot.params['id']).subscribe((response) => {\n  //     this.userDetails = response;\n  //   }, (error) => {\n  //     this.alertify.error(error);\n  //   })\n  // }\n\n\n}\n","<div class=\"container mt-4\">\n    <div class=\"row\">\n        <div class=\"col-sm-4 mt-4\">\n            <h1>Your Profile</h1>\n        </div>\n        <div class=\"col-sm-8 mt-4\">\n            <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\n                <strong>Information:</strong> You have made some changes\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <div class=\"card mt-4\">\n                <img src=\"{{user.photoUrl || '../../../../../assets/user.jpg'}}\" alt=\"{{user.knownAs}}\" class=\"card-img-top img-thumbnail\">\n                <div class=\"card-body ml-2 mr-2\">\n                    <div>\n                        <strong>Location:</strong>\n                        <p>{{user.city}}, {{user.country}}</p>\n                    </div>\n                    <div>\n                        <strong>Age</strong>\n                        <p>{{user.age}}</p>\n                    </div>\n                    <div>\n                        <strong>Last Active</strong>\n                        <p>{{user.lastActive | timeago}}</p>\n                    </div>\n\n                    <div>\n                        <strong>Member Since</strong>\n                        <p>{{user.created | date}}</p>\n                    </div>\n                </div>\n                <div class=\"card footer\">\n                    <div class=\"btn-group d-flex\">\n                        <button [disabled]=\"!editForm.dirty\" form=\"editForm\" class=\"btn btn-success w-100\">Save Changes</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-8 mt-4\">\n            <div class=\"tab-panel\">\n                <tabset class=\"member-tabset\">\n                    <tab heading=\"About {{user.username}}\">\n                        <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"saveChanges()\" >\n                            <h4>Description</h4>\n                            <textarea name=\"introduction\" rows=\"7\" [(ngModel)]=\"user.introduction\"\n                                class=\"form-control\"></textarea>\n                            <h4>Looking For</h4>\n                            <textarea name=\"lookingFor\" rows=\"7\" [(ngModel)]=\"user.lookingFor\"\n                                class=\"form-control\"></textarea>\n                            <h4>Interests</h4>\n                            <textarea name=\"interests\" rows=\"7\" [(ngModel)]=\"user.interests\"\n                                class=\"form-control\"></textarea>\n                        </form>\n                    </tab>\n                    <tab heading=\"Edit Photos\">\n                        <h4>Photos</h4>\n                    </tab>\n                </tabset>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/service/user.service';\nimport { Alertifyjs } from 'src/app/service/alertify.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n\n  user: User;\n\n  @ViewChild(\"editForm\")\n  editForm: NgForm\n\n  constructor(private route: ActivatedRoute, private userService: UserService, private alertify: Alertifyjs) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe((data) => {\n      this.user = data['userToEdit'];\n    })\n  }\n\n  saveChanges() {\n    this.userService.updateUser(this.user.id, this.user).subscribe((response) => {\n      this.alertify.message(\"Data Updated Successfully\");\n      //this.editForm.dirty = false;\n      this.editForm.reset(this.user);\n    }, (error) => {\n      console.log(error)\n    })\n  }\n}\n","<div class=\"container text-center mt-3\">\r\n    <h2 class=\"mt-5\">Your matches - {{this.paginationInfo.totalItems}} found</h2>\r\n    <form class=\"form-inline\" novalidate #filerForm=\"ngForm\" (ngSubmit)=\"getUsers()\">\r\n        <div class=\"form-group\">\r\n            <label for=\"minAge\">Age From</label>\r\n            <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"minAge\"\r\n                [(ngModel)]=\"this.userParams.minAge\" name=\"minAge\">\r\n        </div>\r\n    \r\n        <div class=\"form-group px-2\">\r\n            <label for=\"maxAge\">Age To</label>\r\n            <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"maxAge\"\r\n                [(ngModel)]=\"this.userParams.maxAge\" name=\"maxAge\">\r\n        </div>\r\n    \r\n        <div class=\"form-group px-2\">\r\n            <label for=\"gender\">Show: </label>\r\n            <select class=\"form-control ml-1\" style=\"width: 130px\" [(ngModel)]=\"this.userParams.gender\" name=\"gender\">\r\n                <option *ngFor=\"let item of this.gender\" [value]=\"item.name\" >\r\n                    {{item.value}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-left:10px\">Apply Filters</button>\r\n        <button type=\"button\" class=\"btn btn-info\" style=\"margin-left:10px\">Reset Filter</button>\r\n    \r\n    </form>\r\n    <br>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div class=\"container mt-5\">\r\n    <div class=\"row\">\r\n        <div *ngFor=\"let user of users\" class=\"col-lg-2 col-md-3 col-sm-6\">\r\n            <app-member-card [user]=user></app-member-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"d-flex justify-content-center\">\r\n\r\n    <pagination [boundaryLinks]=\"true\" \r\n                [totalItems]=\"this.paginationInfo.totalItems\"\r\n                (pageChanged)=\"pageChanged($event)\"\r\n                [(ngModel)]=\"this.paginationInfo.pageNumber\" \r\n                [itemsPerPage]=\"this.userParams.pageSize\" \r\n                previousText=\"&lsaquo;\"\r\n                nextText=\"&rsaquo;\" \r\n                firstText=\"&laquo;\" \r\n                lastText=\"&raquo;\" >\r\n    </pagination>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../service/user.service';\nimport { User } from '../../models/user';\nimport { Alertifyjs } from '../../service/alertify.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PaginationResult, Pagination } from 'src/app/models/pagination';\nimport { UserParams } from 'src/app/models/user-params';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-members',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MembersComponent implements OnInit {\n\n  users: User[];\n  paginationInfo: Pagination;\n  userParams: UserParams = new UserParams();\n  gender: any;\n  defaultValue: string;\n\n  constructor(private userService: UserService, private authService: AuthService, private route: ActivatedRoute, private router: Router, private alertify: Alertifyjs) { }\n\n  ngOnInit(): void {\n\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.paginationInfo = data['users'].pagination;\n    });\n    this.gender = [{ name: 'male', value: 'males' }, { name: 'female', value: 'females' }];\n    //console.log(this.gender);\n    this.getCurrentUser();\n    //this.userParams.gender = \n  }\n\n  getCurrentUser() {\n    this.userService.getUser(this.authService.username.nameid).subscribe((response) => {\n      this.userParams.gender = response.gender == \"male\" ? \"female\" : \"male\";;\n    }, (error) => {\n      console.log(error);\n    })\n  }\n\n  getUsers() {\n    this.userService.getAllUsers(this.paginationInfo.pageNumber, this.userParams.pageSize, this.userParams).subscribe(response => {\n      this.users = response.result;\n      this.paginationInfo = response.pagination;\n    }, error => {\n      this.alertify.error(error);\n    })\n  }\n\n  pageChanged(event: any): void {\n    this.paginationInfo.pageNumber = event.page;\n    this.getUsers();\n  }\n\n}\n","<div class=\"card\">\n  <!-- <div class=\"card-body\"> -->\n  <div *ngIf=\"messages?.length === 0\">\n    No messages yet... say hi by using the message box below\n  </div>\n  <div class=\"messaging\">\n    <div class=\"inbox_msg\">\n      <div class=\"mesgs\">\n        <div class=\"msg_history\">\n          <div *ngFor=\"let message of messages\">\n            <div class=\"incoming_msg\" *ngIf=\"message.recipientId != recipientId\">\n              <div class=\"incoming_msg_img\"> <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\">\n              </div>\n              <div class=\"received_msg\">\n                <div class=\"received_withd_msg\">\n                  <p>{{message.content}}</p>\n                  <span class=\"time_date\"> {{message.messageSent | timeago}}</span>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"outgoing_msg\" *ngIf=\"message.recipientId == recipientId\">\n              <div class=\"sent_msg\">\n                <p>{{message.content}}</p>\n                <span class=\"time_date_sent\">{{message.messageSent | timeago}}\n                  <div *ngIf=\"message.isRead\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"15\" id=\"msg-dblcheck-ack\" x=\"2063\"\n                      y=\"2076\">\n                      <path\n                        d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.88a.32.32 0 0 1-.484.032l-.358-.325a.32.32 0 0 0-.484.032l-.378.48a.418.418 0 0 0 .036.54l1.32 1.267a.32.32 0 0 0 .484-.034l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.88a.32.32 0 0 1-.484.032L1.892 7.77a.366.366 0 0 0-.516.005l-.423.433a.364.364 0 0 0 .006.514l3.255 3.185a.32.32 0 0 0 .484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\"\n                        fill=\"#4fc3f7\" />\n                    </svg>\n                  </div>\n                </span>\n              </div>\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"card-footer\">\n\n  <form #messageForm=\"ngForm\">\n    <div class=\"type_msg\">\n      <div class=\"input_msg_write\">\n        <input type=\"text\" [(ngModel)]=\"newMessage.content\" name=\"content\" required class=\"write_msg\"\n          placeholder=\"Type a message\" />\n        <button class=\"msg_send_btn\" (click)=\"sendMessage()\" type=\"button\">\n          <i class=\"fa fa-paper-plane-o\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n    <!-- <p class=\"text-center top_spac\"> Design by <a target=\"_blank\" href=\"#\">Sunil Rajput</a></p> -->\n  </form>\n  <!-- \n    <div class=\"input-group\">\n      <input type=\"text\" \n        placeholder=\"send a private message\" />\n\n      <div class=\"input-group-append\">\n        <button [disabled]=\"!messageForm.valid\" class=\"btn btn-primary\">\n          Send\n        </button>\n      </div>\n    </div> -->\n\n  <!-- </div> -->\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from 'src/app/models/message';\nimport { UserService } from 'src/app/service/user.service';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { Alertifyjs } from 'src/app/service/alertify.service';\nimport { tap, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-members-messages',\n  templateUrl: './members-messages.component.html',\n  styleUrls: ['./members-messages.component.css']\n})\nexport class MembersMessagesComponent implements OnInit {\n\n\n  messages: Message[];\n\n  newMessage: any = {};\n\n  @Input()\n  recipientId: number;\n\n  constructor(private userService: UserService, private authService: AuthService, private alertify: Alertifyjs) { }\n\n  ngOnInit(): void {\n    this.getThread();\n  }\n  getThread() {\n    var currentId = +this.authService.username.nameid;\n    this.userService.getThread(this.authService.username.nameid, this.recipientId)\n      .pipe(\n        tap(messages => {\n          for (let i = 0; i < messages.length; i++) {\n            //const element = this.messages[i];\n            if (messages[i].isRead === false && messages[i].recipientId === currentId) {\n              this.userService.readMessage(messages[i].id, currentId);\n            }\n          }\n        })\n        ).subscribe((response) => {\n          this.messages = response;\n          // for (let i = 0; i < this.messages.length; i++) {\n          //   const element = this.messages[i];\n          //   this.alertify.message(this.messages[i].senderKnowsAs);\n          // }\n        }, (error) => {\n          this.alertify.error(error.message);\n        })\n  }\n\n  sendMessage() {\n    this.newMessage.RecipientId = this.recipientId;\n    this.userService.createMessage(this.authService.username.nameid, this.newMessage).subscribe((response) => {\n      console.log(response);\n    }, (error => {\n      this.alertify.error(error.message); \n    }), () => {\n      this.getThread();\n      this.newMessage.content = \"\";\n    }\n    )\n  }\n}\n","<div class=\"container mt-5\">\n    <div class=\"row\">\n        <div class=\"btn-group  text-center\">\n            <button class=\"btn btn-primary\" ngDefaultControl name=\"btnUnread\" (click)=\"loadMessages('Unread')\">\n                <i class=\"fa fa-envelope\"></i> Unread\n            </button>\n            <button class=\"btn btn-primary\" ngDefaultControl name=\"btnInbox\" (click)=\"loadMessages('Inbox')\">\n                <i class=\"fa fa-envelope-open\"></i> Inbox\n            </button>\n            <button class=\"btn btn-primary\" ngDefaultControl name=\"btnOutBox\" (click)=\"loadMessages('Outbox')\">\n                <i class=\"fa fa-paper-plane\"></i> Outbox\n            </button>\n        </div>\n    </div>\n\n    <div class=\"row text-center\" *ngIf=\"messages.length == 0\">\n        <div class=\"col text-center mt-5\" ><strong class=\"mt-9\">No messages in the {{messageContainer}} mail box</strong></div>\n        <h3 class=\"center\"></h3>\n    </div>\n\n    <div class=\"row\" *ngIf=\"messages.length > 0\">\n        <table class=\"table table-hover\" style=\"cursor: pointer\">\n            <tr>\n                <th style=\"width: 40%\">Message</th>\n                <th style=\"width: 20%\" *ngIf=\"messageContainer == 'Outbox'\">To</th>\n                <th style=\"width: 20%\" *ngIf=\"messageContainer == 'Inbox'\">From</th>\n                <th style=\"width: 20%\">Sent / Received</th>\n                <th style=\"width: 20%\"></th>\n            </tr>\n            <tr *ngFor=\"let message of messages\"\n                [routerLink]=\"['/members',  messageContainer == 'Outbox' ? message.recipientId : message.senderId]\"\n                [queryParams]=\"{tab:3}\">\n                <td>{{message.content}}</td>\n                <td>\n                    <div *ngIf=\"messageContainer != 'Outbox'\">\n                        <!-- <img src={{message?.senderPhotoUrl}} class=\"img-circle rounded-circle\"> -->\n                        <strong>{{message.senderKnownAs}}</strong>\n                    </div>\n                    <div *ngIf=\"messageContainer == 'Outbox'\">\n                        <!-- <img src={{message?.recipientPhotoUrl}} class=\"img-circle rounded-circle\"> -->\n                        <strong>{{message.recipientKnownAs}}</strong>\n                    </div>\n                </td>\n                <td>{{message.messageSent | timeago }}</td>\n                <td>\n                    <button class=\"btn btn-danger\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"deleteMessage(message.id)\">Delete</button>\n                </td>\n            </tr>\n        </table>\n\n    </div>\n\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"this.pagination.totalItems > 0\">\n    <pagination [itemsPerPage]=\"this.pagination.pageSize\" [totalItems]=\"this.pagination.totalItems\"\n        previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\"\n        (pageChanged)=\"PageChanged($event)\" [(ngModel)]=\"this.pagination.pageNumber\" [boundaryLinks]=\"true\">\n    </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RouterLink, ActivatedRoute } from '@angular/router';\nimport { Message } from '../models/message';\nimport { Pagination, PaginationResult } from '../models/pagination';\nimport { UserService } from '../service/user.service';\nimport { Alertifyjs } from '../service/alertify.service';\nimport { AuthService } from '../service/auth.service';\n\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer: string;\n  \n  constructor(private routerLink: ActivatedRoute,\n    private userServcie: UserService, private alterify: Alertifyjs\n    , private authSerive: AuthService, private alert: Alertifyjs) { }\n\n  ngOnInit(): void {\n    this.messageContainer = \"Unread\";\n    this.routerLink.data.subscribe(response => {\n      this.messages = response['messages'].result;\n      this.pagination = response['messages'].pagination;\n    });\n  }\n\n  loadMessages(messageContainer: string) {\n    this.messageContainer = messageContainer\n    console.log(messageContainer);\n    this.userServcie.getMessages(this.authSerive.username.nameid, this.pagination.pageNumber\n      , this.pagination.pageSize, messageContainer).subscribe((response : any) => {\n        this.messages = response.result;\n        this.pagination = response.pagination;\n      })\n  }\n\n  PageChanged(event: any): void{\n    this.pagination.pageNumber = event.page;\n    this.loadMessages(this.messageContainer);\n  }\n\n  deleteMessage(messageId: number) {\n    this.alterify.confirm(\"Are you Sure you want to delete this message\", () => {\n      this.userServcie.deleteMessage(messageId, this.authSerive.username.nameid).subscribe(() => {\n        this.messages.splice(this.messages.findIndex(x => x.id == messageId), 1);\n      }, (error) => {\n        this.alterify.error(error);\n      })\n    })\n  }\n\n}\n","export interface Pagination {\r\n    pageNumber: number;\r\n    pageSize: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginationResult<T>{\r\n    result: T;\r\n    pagination: Pagination;\r\n}","export class UserParams {\r\n    pageSize: number = 12;\r\n    pageNumber: number = 1;\r\n    minAge: number = 18 ;\r\n    maxAge: number = 99 ;\r\n    gender: any;\r\n}","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n  <div class=\"container\">\n  <a class=\"navbar-brand\" [routerLink]=\"['/']\">Dating</a>\n\n  <ul class=\"navbar-nav mr-auto\" *ngIf=\"IsLoggedIn()\">\n    <li class=\"nav-item\" routerLinkActive=\"router-link-active\">\n      <a class=\"nav-link\"  [routerLink]=\"['/members']\" >Matches</a>\n    </li>\n    <li class=\"nav-item\" routerLinkActive=\"router-link-active\">\n      <a class=\"nav-link\" [routerLink]=\"['/lists']\" >Lists</a>\n    </li>\n    <li class=\"nav-item\" routerLinkActive=\"router-link-active\">\n      <a class=\"nav-link\" [routerLink]=\"['/messages']\" >Messages</a>\n    </li>\n  </ul>\n\n  <div *ngIf=\"IsLoggedIn()\" class=\"dropdown\" dropdown>\n    <button class=\"dropdown-toggle\" dropdownToggle>\n      \n      Welcome {{authService.username.unique_name}}\n     \n    </button>\n    <div class=\"dropdown-menu\" *dropdownMenu>\n      <a class=\"dropdown-item\" [routerLink]= \"['member/edit']\">Edit Profile</a>\n      <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\n    </div>\n  </div>\n\n\n  <form *ngIf=\"!IsLoggedIn()\" #loginForm=\"ngForm\" class=\"form-inline my-2 my-lg-0\">\n    <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"username\" name=\"username\" required\n      [(ngModel)]=\"model.username\">\n    <input class=\"form-control mr-sm-2\" type=\"password\" placeholder=\"password\" name=\"password\" required\n      [(ngModel)]=\"model.password\">\n    <button class=\"btn btn-success my-2 my-sm-0\" [disabled]=\"!loginForm.valid\" (click)=\"login()\">Login</button>\n  </form>\n\n  </div>\n</nav>\n<br>","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from '../service/auth.service';\nimport { error } from '@angular/compiler/src/util';\nimport { from } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Router } from '@angular/router';\nimport { Alertifyjs } from '../service/alertify.service';\n\n@Component({\n  selector: \"app-nav\",\n  templateUrl: \"./nav.component.html\",\n  styleUrls: [\"./nav.component.css\"]\n})\nexport class NavComponent implements OnInit {\n  constructor(public authService: AuthService, private router: Router, private alertify: Alertifyjs) { }\n  model: any = {};\n  val: any;\n  ngOnInit() {\n    // this.getData();\n\n    //console.log(this.authService.username);\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(\n      response => {\n        this.alertify.message(\"Logged in Successfully\");\n      }, (error) => {\n        this.alertify.error(\"you're not authorized to log in\");\n      }\n    );\n  }\n\n  // getData() {\n  //   const data = from(fetch('http://localhost:6100/api/values'));\n  //   // Subscribe to begin listening for async result\n  //   data.subscribe({\n  //     next(response) { console.log(response); },\n  //     error(err) { console.error('Error: ' + err); },\n  //     complete() { console.log('Completed'); }\n  //   });\n  // }\n\n  IsLoggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  logout() {\n    localStorage.removeItem(\"token\");\n    this.router.navigate(['/']);\n  }\n}\n","\r\nimport * as alertifyjs from 'alertifyjs'\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class Alertifyjs {\r\n  /**\r\n   *\r\n   */\r\n  constructor() {\r\n \r\n  }\r\n\r\n  confirm(message: string, ok: () => any) {\r\n    alertifyjs.confirm(message,\r\n      function (e: any) {\r\n        if (e) {\r\n          ok();\r\n        }\r\n        else { }\r\n      });\r\n  }\r\n\r\n  error(message: string) {\r\n    alertifyjs.error(message);\r\n  }\r\n\r\n  warning(message: string) {\r\n    alertifyjs.warning(message);\r\n  }\r\n\r\n  message(message: string) {\r\n    alertifyjs.message(message);\r\n  }\r\n\r\n  success() {\r\n    alertifyjs.error(\"success\");\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  url = 'http://localhost:6100/api/auth';\n  jwtHelper = new JwtHelperService();\n  //decodedToken = this.jwtHelper.decodeToken('token');\n\n  username: any;\n  constructor(private httpclient: HttpClient) { }\n\n  login(model: any) {\n    return this.httpclient.post(this.url + '/login', model).pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('token', user.token);\n          this.username = this.jwtHelper.decodeToken(user.token);\n          console.log(this.username.unique_name);\n        }\n      })\n    );\n  }\n\n  register(model: any) {\n    return this.httpclient.post(this.url + \"/register\", model);\n  }\n\n  loggedIn() {\n    var token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/user';\nimport { Pagination, PaginationResult } from '../models/pagination';\nimport { map, catchError } from 'rxjs/operators';\nimport { JsonPipe } from '@angular/common';\nimport { Alertifyjs } from './alertify.service';\nimport { Message } from '../models/message';\n\n//  const options = {\n//    headers : new HttpHeaders({\n//     \"Authorization\": \"Bearer \" + localStorage.getItem('token')\n//   })\n//  };\nconst PaginationMessageResult: PaginationResult<Message[]> = new PaginationResult<Message[]>();\nconst paginationResult: PaginationResult<User[]> = new PaginationResult<User[]>();\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserService {\n  constructor(private http: HttpClient, private alterify: Alertifyjs) { }\n\n  getAllUsers(pageNumber?, pageSize?, userParams?, likesParams?): Observable<PaginationResult<User[]>> {\n\n    let httpParams = new HttpParams();\n    httpParams = httpParams.append('pageNumber', pageNumber);\n    httpParams = httpParams.append('pageSize', pageSize);\n\n    if (userParams != null) {\n      httpParams = httpParams.append('minAge', userParams.minAge);\n      httpParams = httpParams.append('maxage', userParams.maxAge);\n      httpParams = httpParams.append('gender', userParams.gender);\n    }\n\n    if (likesParams === \"likees\") {\n      httpParams = httpParams.append('likees', 'true');\n\n    }\n    if (likesParams === \"likers\") {\n      httpParams = httpParams.append('likers', 'true');\n    }\n\n    return this.http.get<User[]>(environment.APIUrl + \"users\", { observe: 'response', params: httpParams })\n      .pipe(\n        map(response => {\n          paginationResult.result = response.body['responseBody'];\n          if (paginationResult.result == null && response.body['exception'] != null) {\n            this.alterify.error(response.body['exception']);\n          }\n          if (response.headers.get('Pagination') != null) {\n            var paginationHeaderValue = response.headers.get(\"Pagination\");\n            paginationResult.pagination = JSON.parse(paginationHeaderValue);\n          }\n          return paginationResult;\n        })\n      )\n  }\n\n  getUser(id: number): Observable<User> {\n    return this.http.get<User>(environment.APIUrl + \"users/\" + id);\n  }\n\n  updateUser(id: number, user: User): Observable<User> {\n    return this.http.put<User>(environment.APIUrl + \"users/\" + id, user);\n  }\n\n  getLikes(id: number, recepientId: number) {\n    return this.http.post(environment.APIUrl + 'users/' + id + '/like/' + recepientId, {});\n  }\n\n  getMessages(userId: number, pageNumber?, pageSize?, messageContainer?): Observable<PaginationResult<Message[]>> {\n    var httpParams = new HttpParams();\n\n    //httpParams = httpParams.append(\"MessageType\", \"Unread\");\n\n    if (pageNumber != null && pageSize != null) {\n      httpParams = httpParams.append(\"PageNumber\", pageNumber);\n      httpParams = httpParams.append(\"PageSize\", pageSize);\n    }\n\n    if (messageContainer != null) {\n      httpParams = httpParams.append(\"MessageType\", messageContainer);\n    }\n\n    return this.http.get<Message[]>(environment.APIUrl + \"users/\" + userId + \"/Messages\",\n      { observe: 'response', params: httpParams }).pipe(\n        map(response => {\n          PaginationMessageResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            //console.log(response.headers.get('response'));\n            PaginationMessageResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n\n          return PaginationMessageResult;\n\n        })\n      );\n  }\n\n  getThread(id, recepientId) {\n    return this.http.get<Message[]>(environment.APIUrl + \"users/\" + id + \"/Messages/thread/\" + recepientId);\n  }\n\n  createMessage(id: number, message: Message) {\n    return this.http.post<Message>(environment.APIUrl + \"users/\" + id + \"/messages\", message);\n  }\n\n  deleteMessage(id: number, userId: number) {\n    return this.http.post(environment.APIUrl + \"users/\" + userId + \"/messages/\" + id, {});\n  }\n\n  readMessage(messageId: number, userId) {\n    var url = environment.APIUrl + \"users/\" + userId + \"/messages/\" + messageId + \"/read\"\n    return this.http.post(url, {}).subscribe();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  APIUrl: \"http://localhost:6100/api/\",\n  domainUrl: \"localhost:6100\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}